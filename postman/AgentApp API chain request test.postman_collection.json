{
	"info": {
		"_postman_id": "8ee1d549-4f24-497c-b8bd-cd58c6701623",
		"name": "AgentApp API chain request test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4967945"
	},
	"item": [
		{
			"name": "Получение токена",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.request.headers.remove('Authorization');"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"token\", \"Token \" + jsonData.token);\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"{{user}}\",\r\n    \"password\": \"{{pass}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/{{api_version}}/users/obtain-token",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{api_version}}",
						"users",
						"obtain-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание водителя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"driver_id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"first_name\": \"Имя\",\r\n  \"last_name\": \"Фамилия\",\r\n  \"patronymic\": \"Отчество\",\r\n  \"birth_date\": \"1990-01-01\",\r\n  \"driving_experience_started\": \"2010-10-10\",\r\n  \"driver_licenses\": [\r\n    {\r\n      \"credential_type\": \"DRIVER_LICENSE\",\r\n      \"number\": \"012345\",\r\n      \"series\": \"1234\",\r\n      \"issue_date\": \"2010-10-10\"\r\n    }\r\n  ]\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/{{api_version}}/insured_objects/drivers",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{api_version}}",
						"insured_objects",
						"drivers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание собственника",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"owner_id\", jsonData.person);\r",
							"\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"last_name\": \"Фамилия\",\r\n  \"first_name\": \"Имя\",\r\n  \"patronymic\": \"Отчество\",\r\n  \"birth_date\": \"1990-01-01\",\r\n  \"credential\": [\r\n    {\r\n      \"credential_type\": \"RUSSIAN_INTERNAL_PASSPORT\",\r\n      \"issue_date\": \"2017-03-08\",\r\n      \"issue_point\": \"УФМС\",\r\n      \"issue_point_code\": \"123-456\",\r\n      \"number\": \"123456\",\r\n      \"series\": \"1234\"\r\n    }\r\n  ],\r\n  \"address\": [\r\n    {\r\n      \"address_query\": \"г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1\",\r\n      \"address_type\": \"LEGAL_ADDRESS\",\r\n      \"region_kladr_id\": \"7800000000000\",\r\n      \"city_kladr_id\": \"7800000600000\"\r\n    },\r\n    {\r\n      \"address_query\": \"г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1\",\r\n      \"address_type\": \"ACTUAL_ADDRESS\",\r\n      \"region_kladr_id\": \"7800000000000\",\r\n      \"city_kladr_id\": \"7800000600000\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/{{api_version}}/insured_objects/owners/natural_persons",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{api_version}}",
						"insured_objects",
						"owners",
						"natural_persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание страхователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"insurant_id\", jsonData.person);\r",
							"\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"last_name\": \"Фамилия\",\r\n  \"first_name\": \"Имя\",\r\n  \"patronymic\": \"Отчество\",\r\n  \"birth_date\": \"1990-01-01\",\r\n  \"credential\": [\r\n    {\r\n      \"credential_type\": \"RUSSIAN_INTERNAL_PASSPORT\",\r\n      \"issue_date\": \"2010-10-10\",\r\n      \"issue_point\": \"УФМС\",\r\n      \"issue_point_code\": \"123-456\",\r\n      \"number\": \"123456\",\r\n      \"series\": \"1234\"\r\n    }\r\n  ],\r\n  \"address\": [\r\n    {\r\n      \"address_query\": \"г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1\",\r\n      \"address_type\": \"LEGAL_ADDRESS\",\r\n      \"region_kladr_id\": \"7800000000000\",\r\n      \"city_kladr_id\": \"7800000600000\"\r\n    },\r\n    {\r\n      \"address_query\": \"г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1\",\r\n      \"address_type\": \"ACTUAL_ADDRESS\",\r\n      \"region_kladr_id\": \"7800000000000\",\r\n      \"city_kladr_id\": \"7800000600000\"\r\n    }\r\n  ],\r\n  \"contact\": [\r\n        {\r\n            \"contact_type\": \"PHONE\",\r\n            \"data\": \"88005553535\"\r\n        },\r\n        {\r\n            \"contact_type\": \"EMAIL\",\r\n            \"data\": \"qa@qa.qa\"\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/v2/insured_objects/insurants/natural_persons",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v2",
						"insured_objects",
						"insurants",
						"natural_persons"
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание автомобиля",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"car_id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"car_model_id\": 864026180,\r\n  \"engine_power\": 211,\r\n  \"chassis_number\": \"2322\",\r\n  \"car_body_number\": \"2727\",\r\n  \"vin_number\": \"WAUZZZ8T4BA037241\",\r\n  \"number_plate\": \"Р904МХ178\",\r\n  \"manufacturing_year\": 2010,\r\n  \"max_mass\": null,\r\n  \"credential\": [\r\n    {\r\n      \"credential_type\": \"VEHICLE_REGISTRATION\",\r\n      \"issue_date\": \"2010-11-01\",\r\n      \"number\": \"267461\",\r\n      \"series\": \"78УН\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/v3/insured_objects/cars",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"insured_objects",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Объединение субъектов и объектов страхования в одну сущность “объект страхования”",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"insuredObject_id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", () => {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response property matches request values\", function () {\r",
							"  pm.expect(pm.response.json().drivers).to.include(pm.collectionVariables.get(\"driver_id\"));\r",
							"  pm.expect(pm.response.json().car).to.eql(pm.collectionVariables.get(\"car_id\"));\r",
							"  pm.expect(pm.response.json().owner).to.eql(pm.collectionVariables.get(\"owner_id\"));\r",
							"  pm.expect(pm.response.json().insurant).to.eql(pm.collectionVariables.get(\"insurant_id\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"drivers\":[\"{{driver_id}}\"],\r\n    \"owner\": \"{{owner_id}}\",\r\n    \"car\": \"{{car_id}}\",\r\n    \"insurant\": \"{{insurant_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/{{api_version}}/insured_objects/",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{api_version}}",
						"insured_objects",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Создание договора",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"agreement_id\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Agreements has calculation.premium\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.calculation).to.exist;\r",
							"  pm.expect(responseJson.calculation.premium).to.exist;\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"valid_from\": \"2022-12-14\",\r\n    \"valid_to\": \"2023-12-13\",\r\n    \"insurance_period\": 1,\r\n    \"target_of_using\": 11,\r\n    \"drivers_ids\": [\"{{driver_id}}\"],\r\n    \"is_car_without_registration\": false,\r\n    \"engine_power\": 211,\r\n    \"has_car_trailer\": false,\r\n    \"car_type\": \"B\",\r\n    \"owner_registration\": {\r\n      \"address_query\": \"г Санкт-Петербург, г Ломоносов, ул Швейцарская, д 1 к 1, кв 1\",\r\n      \"region_kladr_id\": \"7800000000000\",\r\n      \"city_kladr_id\": \"7800000600000\"\r\n    },\r\n    \"periods\": []\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/v3/agreements/calculations",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"v3",
						"agreements",
						"calculations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление Договора в системе AgentApp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"insured_object\": \"{{insuredObject_id}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{http_schema}}://{{host}}/{{api_version}}/agreements/{{agreement_id}}",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{api_version}}",
						"agreements",
						"{{agreement_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение полного расчёт по СК",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const insCompanyCode = pm.collectionVariables.get(\"ins_company_codes\");\r",
							"\r",
							"if (insCompanyCode && insCompanyCode.length > 0){\r",
							"    postman.setNextRequest(\"Получение полного расчёт по СК\");\r",
							"} else {\r",
							"    postman.setNextRequest(null);\r",
							"}\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let insCompanyCode = pm.collectionVariables.get(\"ins_company_codes\");\r",
							"\r",
							"if(!insCompanyCode || insCompanyCode.length == 0) {\r",
							"    insCompanyCode = [\"ZETTA\", \"ALPHA_STRAH\", \"SDS\", \"RENAISSANCE\", \"RGS\", \"SNGI\", \"UGORIA\", \"INGOSSTRAH\", \"TINKOFF\"];\r",
							"}\r",
							"\r",
							"let currentCode = insCompanyCode.shift();\r",
							"console.log(currentCode)\r",
							"pm.collectionVariables.set(\"ins_company_code\", currentCode);\r",
							"pm.collectionVariables.set(\"ins_company_codes\", insCompanyCode);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{http_schema}}://{{host}}/{{api_version}}/agreements/{{agreement_id}}/results/{{ins_company_code}}",
					"protocol": "{{http_schema}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{api_version}}",
						"agreements",
						"{{agreement_id}}",
						"results",
						"{{ins_company_code}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({ key: 'Authorization', value: pm.collectionVariables.get(\"token\") });",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Content-Type header is application/json\", () => {",
					"  pm.response.to.have.header(\"Content-Type\");",
					"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "http_schema",
			"value": "https"
		},
		{
			"key": "host",
			"value": "partner.agentapp.ru"
		},
		{
			"key": "api_version",
			"value": "v1"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "driver_id",
			"value": ""
		},
		{
			"key": "owner_id",
			"value": ""
		},
		{
			"key": "insurant_id",
			"value": ""
		},
		{
			"key": "car_id",
			"value": ""
		},
		{
			"key": "insuredObject_id",
			"value": ""
		},
		{
			"key": "agreement_id",
			"value": ""
		},
		{
			"key": "ins_company_code",
			"value": ""
		},
		{
			"key": "ins_company_codes",
			"value": ""
		},
		{
			"key": "user",
			"value": "qa@qa.qa",
			"type": "string"
		},
		{
			"key": "pass",
			"value": "",
			"type": "string"
		}
	]
}